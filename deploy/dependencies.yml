- hosts: machines
  become: yes
  tasks:

    - name: Setting assume-yes as true for apt-get
      copy:
        content: 'APT::Get::Assume-Yes "true";'
        dest: '/etc/apt/apt.conf.d/90forceyes' 

    - name: Installing lxc, bsdtar, wget, curl and 'linux-image-extra-$(uname -r)'
      apt: name={{item}} 
      with_items:
        - lxc
        - bsdtar
        - wget
        - curl
        - "linux-image-extra-{{ansible_kernel}}"

    - name: Adding the AUFS module
      modprobe: name=aufs

    - name: Getting docker script
      get_url: 
        url: https://get.docker.com/
        dest: '{{playbook_dir}}/tempdocker.sh'

    - name: Running docker script
      shell: '{{playbook_dir}}/tempdocker.sh'

    - name: Getting node source setup script
      uri:
        url: https://deb.nodesource.com/setup_8.x
        method: GET
        follow_redirects: safe
        dest: '{{playbook_dir}}/nodesource_setup.sh'

    - name: Running node source setup script
      shell: '{{playbook_dir}}/nodesource_setup.sh'

    - name: Install nodejs and build-essential
      apt: 
        name: {{item}}
        update_cache: yes
        force: yes
      with_items:
        - nodejs
        - build-essential

    - name: Deleting nodesource_setup.sh and tempdocker.sh
      file:
        path: {{item}}
        state: absent
      with_items:
        - '{{playbook_dir}}/tempdocker.sh'
        - '{{playbook_dir}}/nodesource_setup.sh'

    - name: Installing python-pip, libssl-dev, sshpass, libffi-dev, build-essential, python-dev
      apt:
        name: {{item}}
        update_cache: yes
      with_items:
        - python-pip
        - libssl-dev
        - sshpass
        - libffi-dev
        - build-essential
        - python-dev

    - name: Installing and upgrading pip
      pip:
        name: pip
        state: latest

    - name: Installing cryptography, setuptools and ansible
      pip:
        name: {{item}}
      with_items:
        - cryptography
        - setuptools
        - ansible

    - name: Restarting the docker service
      service:
        name: docker
        state: restarted
